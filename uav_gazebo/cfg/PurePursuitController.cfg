#!/usr/bin/env python3
PACKAGE = "uav_gazebo"

from math import pi
from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

# Orientation Mode
gen.add("orientation_mode", str_t, 0, "Orientation mode (movement, fixed, poi)", "movement")

# Fixed Yaw Angle
gen.add("fixed_yaw", double_t, 0, "Fixed yaw angle in radians", 1.57, -pi, pi)

# Point of Interest Coordinates
gen.add("poi_x", double_t, 0, "Point of Interest X coordinate", 10.0, -1000.0, 1000.0)
gen.add("poi_y", double_t, 0, "Point of Interest Y coordinate", 10.0, -1000.0, 1000.0)
gen.add("poi_z", double_t, 0, "Point of Interest Z coordinate", 5.0, -1000.0, 1000.0)

# Waypoints File Path
gen.add("waypoints_file_path", str_t, 0, "Path to waypoints JSON file", "/root/catkin_ws/src/uav_gazebo/uav_gazebo/missions/path.json")

# Trajectory Parameters
gen.add("trajectory_total_time", double_t, 0, "Total time of the trajectory in seconds", 100.0, 0.0, 10000.0)
gen.add("trajectory_resolution", int_t, 0, "Number of trajectory points", 1000, 1, 1000000)
gen.add("control_loop_hz", double_t, 0, "Control loop frequency in Hz", 50.0, 1.0, 1000.0)

# Look-Ahead Distance Parameters
gen.add("look_ahead_distance_min", double_t, 0, "Minimum look-ahead distance in meters", 2.0, 0.0, 1000.0)
gen.add("look_ahead_distance_max", double_t, 0, "Maximum look-ahead distance in meters", 8.0, 0.0, 1000.0)
gen.add("look_ahead_distance_factor", double_t, 0, "Look-ahead distance scaling factor", 1.0, 0.0, 1000.0)

# Position Controller Gains
gen.add("kp_pos", double_t, 0, "Proportional gain for position control", 1.2, 0.0, 100.0)
gen.add("kd_pos", double_t, 0, "Derivative gain for position control", 0.0001, 0.0, 100.0)
gen.add("ki_pos", double_t, 0, "Integral gain for position control", 0.0, 0.0, 100.0)

# Yaw Controller Gains
gen.add("kp_yaw", double_t, 0, "Proportional gain for yaw control", 1.0, 0.0, 100.0)
gen.add("kd_yaw", double_t, 0, "Derivative gain for yaw control", 0.0001, 0.0, 100.0)
gen.add("ki_yaw", double_t, 0, "Integral gain for yaw control", 0.0, 0.0, 100.0)

# Feedforward Control
gen.add("use_feedforward", bool_t, 0, "Use acceleration feedforward", True)
gen.add("accel_feedforward_gain", double_t, 0, "Acceleration feedforward gain", 0.1, 0.0, 100.0)

# Maximum Velocities
gen.add("max_linear_velocity", double_t, 0, "Maximum linear velocity in m/s", 12.0, 0.0, 1000.0)
gen.add("max_angular_velocity", double_t, 0, "Maximum angular velocity in rad/s", pi / 2, 0.0, 1000.0)

# Visualization
gen.add("enable_plotting", bool_t, 0, "Enable plotting and visualization", True)

exit(gen.generate(PACKAGE, "PurePursuitController", "PurePursuitController"))

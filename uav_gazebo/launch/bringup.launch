<?xml version="1.0"?>
<launch>
	<!-- rosconsole configuration file -->
	<!-- <env name="ROSCONSOLE_CONFIG_FILE" value="$(find uav_gazebo)/config/rosconsole.config" /> -->
	<!-- Launch Gazebo -->
	<include file="$(find gazebo_ros)/launch/empty_world.launch" />
	<!-- Launch RViz -->
	<include file="$(find uav_gazebo)/launch/display.launch" />
	<!-- Spawn simple_drone_manager and load URDF -->
	<include file="$(find uav_gazebo)/launch/spawn.launch" />
	<!-- Call the service to take off -->
	<node name="take_off_service" pkg="rosservice" type="rosservice" args="call --wait /drone/takeoff '{force_takeoff: true, height: 6.0, takeoff_time: 0.0, idle_time: 0.0}'" />
	<!-- assumes ds4drv is running -->
	<node name="joy_node" pkg="joy" type="joy_node">
		<remap from="joy" to="joy" />
	</node>
	<!--
	Spawn joystick drone controller :
	PS4 controller:
	- Left Stick: X, Y
	- Right Stick: Z, Yaw
	- R2/R2: takeoff/land
	- L1: THRUST_TORQUE Mode
	- R1: INACTIVE, STOP, SWITCHOFF, DROP
	- CROSS: POSITION_YAW Mode
	- CIRCLE: VELOCITY_YAWRATE Mode
	- SQUARE: THRUST_ATTITUDE Mode
	- TRIANGLE: THRUST_VELOCITY Mode
	- LEFT/RIGHT STICK BUTTON: RESET DRONE POSITION
	- SHARE: RESET DRONE POSITION + RESET PURSUIT CONTROL
	-->
	<node name="joy_cont" pkg="uav_gazebo" type="joy_controller" output="screen" />
	<!--
	Call the service to switch the mode:
	INACTIVE = 0
	POSITION_YAW = 1
	VELOCITY_YAWRATE = 2
	THRUST_ATTITUDE = 3
	THRUST_VELOCITY = 4
	THRUST_TORQUE = 5
	-->
	<node name="switch_mode_service" pkg="rosservice" type="rosservice" args="call --wait /drone/switch_mode '{mode: {mode: 2}}'" />
	<!-- Launch RQT parameters for dynamic parameters tunning -->
	<node name="rqt_reconfigure" pkg="rqt_reconfigure" type="rqt_reconfigure" output="screen">
		<param name="use_gtk" value="false" />
		<param name="use_qt_gui" value="true" />
	</node>
</launch>

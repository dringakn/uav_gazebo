# ROS Log4J configuration file for setting logging levels and output formatting.
# Comments start with the '#' symbol.

# Root logger configuration:
# - Sets the default logging level to INFO.
# - Directs all log output to the 'rosConsole' appender.
log4j.rootLogger=INFO, rosConsole

# Specific logger configuration for the ROS namespace:
# - Overrides the default logging level for all ROS nodes to DEBUG.
log4j.logger.ros=DEBUG

# Console Appender configuration:
# Define the appender named 'rosConsole' to output logs to the terminal.
#log4j.appender.rosConsole=org.apache.log4j.ConsoleAppender

# Define the layout of the console appender:
# PatternLayout allows you to format the log messages.
#log4j.appender.rosConsole.layout=org.apache.log4j.PatternLayout

# ConversionPattern defines the format of each log message:
# [%d] - Date/Time, [%p] - Log level, %c - Logger name, %m - Message, %n - New line.
#log4j.appender.rosConsole.layout.ConversionPattern=[%d] [%p] %c: %m%n

# Optional: File Appender configuration for logging to a file.
# Uncomment the following lines to enable logging to a file called 'ros.log'.

# Define a file appender named 'rosFile'
# log4j.appender.rosFile=org.apache.log4j.FileAppender
# Specify the log file path.
# log4j.appender.rosFile.File=ros.log
# Set the layout for the file appender.
# log4j.appender.rosFile.layout=org.apache.log4j.PatternLayout
# Use the same conversion pattern as the console.
# log4j.appender.rosFile.layout.ConversionPattern=[%d] [%p] %c: %m%n

# To enable file logging, modify the root logger to include 'rosFile':
# log4j.rootLogger=INFO, rosConsole, rosFile

# End of configuration.
